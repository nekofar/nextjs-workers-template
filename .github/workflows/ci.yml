name: CI Pipeline
on:
  push:
    branches:
      - main
      - master
      - develop
      - 'feature/**'
      - 'release/**'
      - 'hotfix/**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
      - develop
      - 'feature/**'
      - 'release/**'
      - 'hotfix/**'
permissions:
  contents: write
jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: pnpm/action-setup@v4.2.0
        with:
          run_install: false
      - uses: actions/setup-node@v6.0.0
        with:
          node-version-file: 'package.json'
          cache: 'pnpm'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run linter
        run: pnpm lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    name: Build
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: pnpm/action-setup@v4.2.0
        with:
          run_install: false
      - uses: actions/setup-node@v6.0.0
        with:
          node-version-file: 'package.json'
          cache: 'pnpm'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build project
        run: pnpm build

  tests:
    runs-on: ubuntu-latest
    needs: build
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        suite:
          - vitest
          - playwright
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: pnpm/action-setup@v4.2.0
        with:
          run_install: false
      - uses: actions/setup-node@v6.0.0
        with:
          node-version-file: 'package.json'
          cache: 'pnpm'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install Playwright browsers
        if: matrix.suite == 'playwright'
        run: pnpm exec playwright install --with-deps
      - name: Run Vitest suite
        if: matrix.suite == 'vitest'
        run: pnpm test
      - name: Run Playwright suite
        if: matrix.suite == 'playwright'
        run: pnpm test:e2e

  release:
    runs-on: ubuntu-latest
    needs: tests
    name: Release
    steps:
      - name: Create GitHub release
        if: ${{ github.ref_name == 'master' }}

      - uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
      - uses: orhun/git-cliff-action@v4.6.0
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip all
        env:
          OUTPUT: CHANGES.md

      - id: release
        shell: bash
        run: |
          version=$(jq -r '.version' package.json)
          echo "version=${version}" >> $GITHUB_OUTPUT

          changelog=$(cat ${{ steps.git-cliff.outputs.changelog }})
          changelog="$(printf "$changelog" | tail -n +3)"
          {
              echo "notes<<EOF"
              echo "$changelog"
              echo "EOF"
          } >> $GITHUB_OUTPUT


      - name: Create the release
        uses: nekofar/create-github-release@v1.0.14
        with:
          tag: v${{ steps.release.outputs.version }}
          title: v${{ steps.release.outputs.version }}
          notes: ${{ steps.release.outputs.notes }}
          draft: true
          prerelease: ${{ contains(steps.release.outputs.version, '-rc') || contains(steps.release.outputs.version, '-beta') || contains(steps.release.outputs.version, '-alpha') }}

      - name: Skip release for non-tag refs
        if: ${{ github.ref_name != 'master' }}
        run: echo 'Release job skipped because ref is not a tag.'
